; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉getting-clojure.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉getting-clojure.core꞉> 
[true 3 "four" 5]
clj꞉getting-clojure.core꞉> 
[1 [true 3 "four" 5] 6]
clj꞉getting-clojure.core꞉> 
[0 [1 [true 3 "four" 5] 6] 7]
clj꞉getting-clojure.core꞉> 
[true 3 "four" 5]
clj꞉getting-clojure.core꞉> 
[]
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/novels
clj꞉getting-clojure.core꞉> 
3
clj꞉getting-clojure.core꞉> 
"Emma"
clj꞉getting-clojure.core꞉> 
("Coma" "War and Peace")
clj꞉getting-clojure.core꞉> 
("War and Peace")
clj꞉getting-clojure.core꞉> 
()
clj꞉getting-clojure.core꞉> 
()
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/year-book
clj꞉getting-clojure.core꞉> 
; Syntax error compiling at (core.clj:88:30).
; Unable to resolve symbol: resst in this context
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/third-book
clj꞉getting-clojure.core꞉> 
"1984"
clj꞉getting-clojure.core꞉> 
"1984"
clj꞉getting-clojure.core꞉> 
"1984"
clj꞉getting-clojure.core꞉> 
["Emma" "Coma" "War and Peace" "Carrie"]
clj꞉getting-clojure.core꞉> 
(["Emma" "Coma" "War and Peace"] \C \a \r \r \i \e)
clj꞉getting-clojure.core꞉> 
("Carrie" "Emma" "Coma" "War and Peace")
clj꞉getting-clojure.core꞉> 
(1 2 3)
clj꞉getting-clojure.core꞉> 
()
clj꞉getting-clojure.core꞉> 
(1 2 3 "four" 5 "six")
clj꞉getting-clojure.core꞉> 
(1 2.0 2.999 "four" 5.001 "six")
clj꞉getting-clojure.core꞉> 
([1 2 ("a" "list" "inside a" "vector")] "inside" "a" "list")
clj꞉getting-clojure.core꞉> 
(1 2 3 "four" 5)
clj꞉getting-clojure.core꞉> 
(1 2 3 "four" 5 "six")
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/poems
clj꞉getting-clojure.core꞉> 
3
clj꞉getting-clojure.core꞉> 
"Iliad"
clj꞉getting-clojure.core꞉> 
("Odyssey" "Now We Are Six")
clj꞉getting-clojure.core꞉> 
"Now We Are Six"
clj꞉getting-clojure.core꞉> 
("Jabberwocky" "Iliad" "Odyssey" "Now We Are Six")
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/vector-poems
clj꞉getting-clojure.core꞉> 
["Iliad" "Odyssey" "Now We Are Six" "Jabberwocky"]
clj꞉getting-clojure.core꞉> 
("Jabberwocky" "Iliad" "Odyssey" "Now We Are Six")
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/novels
clj꞉getting-clojure.core꞉> 
["Emma" "Coma" "War and Peace" "Jaws"]
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/more-novels
clj꞉getting-clojure.core꞉> 
#'getting-clojure.core/novels
clj꞉getting-clojure.core꞉> 
("Jaws" "Emma" "Coma" "War and Peace")
clj꞉getting-clojure.core꞉> 
